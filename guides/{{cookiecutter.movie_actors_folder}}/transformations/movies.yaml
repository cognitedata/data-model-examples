# Manifest file downloaded from fusion
externalId: tutorial-movies
name: Movies
query: >-
  /* MAPPING_MODE_ENABLED: true */

  /* {"version":1,"sourceType":"raw","mappings":[{"from":"Movie_Name","to":"externalId","asType":"STRING"},{"from":"Movie_Name","to":"name","asType":"STRING"},{"from":"Description","to":"description","asType":"STRING"},{"from":"Run_time","to":"runTime","asType":"INT"},{"from":"Gross_USD","to":"gross","asType":"INT"},{"from":"Director","to":"director","asType":"STRUCT<STRING:STRING>"},{"from":"IMDB_Rating","to":"imdbRating","asType":"DOUBLE"},{"from":"Released_Year","to":"releasedYear","asType":"INT"},{"from":"","to":"watchedIt"}],"sourceLevel1":"{{cookiecutter.prefix}}{{cookiecutter.movie_actors_raw_db}}","sourceLevel2":"movies"} */

  select
    cast(`Movie_Name` as STRING) as externalId,
    cast(`Movie_Name` as STRING) as name,
    cast(`Description` as STRING) as description,
    cast(`Run_time` as INT) as runTime,
    cast(`Gross_USD` as INT) as gross,
    node_reference('{{cookiecutter.movie_actors_space}}', Director) as director,
    cast(`IMDB_Rating` as DOUBLE) as imdbRating,
    cast(`Released_Year` as INT) as releasedYear
  from
    `{{cookiecutter.prefix}}{{cookiecutter.movie_actors_raw_db}}`.`movies`;
destination:
  view:
    space: {{cookiecutter.movie_actors_space}}
    externalId: Movie
    version: "1"
  instanceSpace: {{cookiecutter.movie_actors_space}}
  type: nodes
ignoreNullFields: true
shared: true
action: upsert
# Specify credentials separately like this:
# You can also use different credentials for the running transformations than the ones you use to deploy
authentication:
  clientId: ${TRANSFORMATIONS_CLIENT_ID}
  clientSecret: ${TRANSFORMATIONS_CLIENT_SECRET}
  tokenUrl: ${TRANSFORMATIONS_TOKEN_URL}
  # Optional: If idP requires providing the scopes
  cdfProjectName: ${TRANSFORMATIONS_PROJECT}
  scopes:
    - ${TRANSFORMATIONS_SCOPES}
  # Optional: If idP requires providing the audience
  audience: ${TRANSFORMATIONS_AUDIENCE}
